import React, { useState, useContext, useEffect } from 'react'
import { BiImageAdd } from 'react-icons/bi'
import styles from '../styles//sass/pages/addPlant.module.scss'
import Selector from '../components/items/selector'
import { Link, useNavigate } from 'react-router-dom'
import { AppContext } from '../appState/store'
import { createPlant, getAllPlantType, getPlantType } from '../services/api/plant'
import { getAllSlot } from '../services/api/slot'
const AddPlant = () => {
  const [selectedFile, setSelectedFile] = useState({
    file: null,
    base64: null
  });
  const { machineId } = useContext(AppContext)
  const [dataPlantType, setDataPlantType] = useState([])
  const [dataSlot, setDataSlot] = useState([])
  const [singlePlantType, setSinglePlantType] = useState()
  const [selectedPlantTypeId, setSelectedPlantTypeId] = useState()
  const [selectedSlotId, setSelectedSlotId] = useState()
  const [price, setPrice] = useState(0)
  const [error, setError] = useState({
    status: false,
    message: ""
  })
  const [loadding, setLoadding] = useState(false)
  const navigate = useNavigate();

  // Function to handle file selection
  const handleFileSelect = (event) => {
    const file = event.target.files[0]
    const reader = new FileReader();
    reader.onload = function (upload) {
      const base64Image = upload.target.result;
      // ทำสิ่งที่ต้องการกับภาพในรูปแบบ Base64
      setSelectedFile({
        file: event.target.files[0],
        base64: base64Image
      });
    };

    reader.readAsDataURL(file);
  };

  const onGetDataPlantType = async () => {
    const res = await getAllPlantType()
    if (res) {
      const mapData = res.data.map((item) => {
        return {
          value: item.id,
          label: item.name
        }
      })
      setDataPlantType(mapData)
    }
  }
  const onGetDataSlot = async () => {
    const res = await getAllSlot(machineId)
    if (res) {
      const mapData = res.data.map((item) => {
        return {
          value: item.id,
          label: item.slot_code
        }
      })
      setDataSlot(mapData)
    }
  }

  const onGetPlantType = async () => {
    const res = await getPlantType(selectedPlantTypeId)
    if (res) {
      setSinglePlantType(res.data)
    }
  }
  const onSubmit = async () => {
    if (!selectedPlantTypeId || !selectedSlotId || !selectedFile || !price) {
      setError({
        status: true,
        message: "The form is incomplete"
      })
      setLoadding(false)
      return
    }
    setLoadding(true)
    const payload = {
      plant_type_id: selectedPlantTypeId,
      slot_id: selectedSlotId,
      price: Number(price),
      image_name: selectedFile.file.name,
      image: "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"
    }
    console.log(typeof selectedFile.base64)
    const res = await createPlant(payload, machineId)
    if (res) {
      navigate('/home-admin')
      setLoadding(false)
    }
  }
  useEffect(() => {
    if (!machineId) {
      navigate('/machine-location')
    }
    if (selectedPlantTypeId) {
      onGetPlantType()
    }
    if (selectedPlantTypeId || selectedSlotId || selectedFile || price) {
      setError({
        status: false,
        message: ""
      })
    }
    onGetDataPlantType()
    onGetDataSlot()
  }, [machineId, selectedPlantTypeId, selectedSlotId, selectedFile, price])

  return (
    <div
      style={{
        minHeight: '90vh',
        position: 'relative',
      }}
    >
      <Link to='/home-admin' className="btn_back_edit_location">
        <div>
          <img src="/img/icon/icon_arrow.svg" alt="" width="100%" height="100%" />
        </div>
        <div className="pos_text_back">
          Back
        </div>
      </Link>
      <div style={{ marginTop: "20px" }}>
        <h2>Insert plant to Slot</h2>
      </div>
      {/* from */}
      <form action="">
        <div className={styles.grid_form}>
          {/* grid1 */}
          <div>
            <label htmlFor="file"
              style={{
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
                gap: "10px",
              }}
            >
              {selectedFile.file ? (
                <div className={styles.box_input_img}>
                  <img
                    src={URL.createObjectURL(selectedFile.file)}
                    alt="Selected"
                    width="230px"
                  />
                </div>
              ) : (
                <div className={styles.box_input_img}>
                  <BiImageAdd size={130} />
                </div>
              )}
              <div className={styles.but_select_img}>Select Image</div>
              <input type="file" id='file' />
            </label>
          </div>
          {/* grid 2 */}
          <div>
            <div className={`${styles.flex_col}`}>
              <div className='asterisk'>Select plant’s type</div>
              <Selector title={"Please Select..."} type={"from"} options={dataPlantType} onChange={(e) => setSelectedPlantTypeId(e)} />
            </div>
            <div className={styles.flex_col} style={{ marginTop: "30px" }}>
              <div className='asterisk'>Price</div>
              <div className={styles.flex}>
                <input type="text"
                  placeholder='price'
                  style={{
                    border: '3px solid #B253ED',
                    borderRadius: '20px',
                    padding: '15px',
                    width: "70px"
                  }}
                  onChange={(e) => setPrice(e.target.value)}
                />
                <div>Baht</div>
              </div>
            </div>
          </div>
          {/* grid 3 */}
          <div>
            <div className={styles.flex_col}>

              <div className='asterisk'>Select the slot</div>
              <Selector title={"Please select.."} type={"from"} options={dataSlot} onChange={(e) => setSelectedSlotId(e)} />

            </div>
          </div>
          {singlePlantType && (
            <div
              style={{
                gridColumn: " 2 / span 2",
                gridColumnStart: "1"
              }}
            >
              <div className={styles.box_detail}>
                <div
                  style={{
                    display: "flex",
                    justifyContent: "space-around",
                  }}
                >
                  <div>
                    <div className={`italic`}>Intensity</div>
                    <div className={`mt_10 text_lg`}
                      style={{
                        position: "relative"
                      }}
                    >
                      <strong>{singlePlantType.preset.intensity.name}</strong>
                      <img src='/img/icon/icon_checkbox_active.svg' alt='' width={22} className={`${styles.img_checkbox}`} />
                    </div>
                  </div>
                  <div>
                    <div className={`italic`}>Lighting</div>
                    <div className={`mt_10 text_lg`}>
                      <strong>{singlePlantType.preset.lighting.name}</strong>
                    </div>
                  </div>
                  <div className={`italic`}>
                    <div>Duration (per day)</div>
                    <div className={`mt_10 text_lg`}>{singlePlantType.preset.lighting.description}</div>
                  </div>
                </div>
                <div className={`${styles.flex} mt_10`}>
                  <div className='italic'>Watering :</div>
                  <div>Every</div>
                  <strong className='text_purple'>{singlePlantType.watering_period}</strong>
                  <div>Days</div>
                </div>
              </div>
              <div
                style={{
                  display: "flex",
                  gap: "10px",
                  fontSize: "20px",
                  marginTop: "20px",
                  paddingLeft: "20px"
                }}
              >
                <div>Category:</div>
                <strong
                  style={{
                    color: "#b253ed"
                  }}
                >{singlePlantType.category.name}</strong>
              </div>
            </div>
          )}
        </div>
      </form>

      <div>
        {error.message && (
          <strong
            style={{
              color: "red",
              position:'absolute',
              bottom: "90px",
              right: "10px"
            }}
          >
            {error.message}
          </strong>
        )}
        <button className={`${styles.but_next}`} onClick={() => onSubmit()}>
          {loadding ? "Loading..." : "Next"}
        </button>
      </div>
    </div>
  )
}

export default AddPlant